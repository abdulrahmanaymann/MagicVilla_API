<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

@if (TempData["success"] != null)
{
    <script type="text/javascript">
        const Toast = Swal.mixin({
            toast: true,
            position: "top-end",
            background: "#28a745",  // Green for success
            color: "#fff",  // White text
            showConfirmButton: false,
            timer: 3000,
            timerProgressBar: true,
            customClass: {
                popup: 'colored-toast',  // Custom class for extra styling
            },
            didOpen: (toast) => {
                toast.style.boxShadow = '0 0 15px rgba(0,0,0,0.5)';  // A subtle shadow
                toast.style.borderRadius = '10px';  // Rounded corners
                toast.onmouseenter = Swal.stopTimer;
                toast.onmouseleave = Swal.resumeTimer;
            },
            showClass: {
                popup: 'swal2-show',
                backdrop: 'swal2-backdrop-show',
                icon: 'swal2-icon-show'
            },
            hideClass: {
                popup: 'swal2-hide',
                backdrop: 'swal2-backdrop-hide',
                icon: 'swal2-icon-hide'
            }
        });

        Toast.fire({
            icon: "success",
            title: '@TempData["success"]'
        });
    </script>
}

@if (TempData["error"] != null)
{
    <script type="text/javascript">
        const Toast = Swal.mixin({
            toast: true,
            position: "top-end",
            background: "#dc3545",  // Red for error
            color: "#fff",  // White text
            showConfirmButton: false,
            timer: 3000,
            timerProgressBar: true,
            customClass: {
                popup: 'colored-toast',  // Custom class for extra styling
            },
            didOpen: (toast) => {
                toast.style.boxShadow = '0 0 15px rgba(0,0,0,0.5)';  // A subtle shadow
                toast.style.borderRadius = '10px';  // Rounded corners
                toast.onmouseenter = Swal.stopTimer;
                toast.onmouseleave = Swal.resumeTimer;
            },
            showClass: {
                popup: 'swal2-show',
                backdrop: 'swal2-backdrop-show',
                icon: 'swal2-icon-show'
            },
            hideClass: {
                popup: 'swal2-hide',
                backdrop: 'swal2-backdrop-hide',
                icon: 'swal2-icon-hide'
            }
        });

        Toast.fire({
            icon: "error",
            title: '@TempData["error"]'
        });
    </script>
}

<style>
    /* Custom Styles for Toasts */
    .colored-toast {
        font-family: 'Arial', sans-serif;
        padding: 15px;
        font-size: 16px;
    }

    /* Styling for Create Button */
    .create-btn {
        background-color: #007bff;
        color: white;
        border-radius: 5px;
        font-size: 16px;
        padding: 10px 20px;
        transition: background-color 0.3s ease;
    }

    .create-btn:hover {
        background-color: #0056b3;
        text-decoration: none;
    }

    /* Smooth Animations */
    .swal2-show {
        animation: fadeIn 0.5s forwards;
    }

    .swal2-hide {
        animation: fadeOut 0.5s forwards;
    }

    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(-10%);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@keyframes fadeOut {
        from {
            opacity: 1;
            transform: translateY(0);
        }
        to {
            opacity: 0;
            transform: translateY(-10%);
        }
    }
</style>
