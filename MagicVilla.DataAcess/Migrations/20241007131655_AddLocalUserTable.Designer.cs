// <auto-generated />
using System;
using MagicVilla.DataAcess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MagicVilla_VillaAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241007131655_AddLocalUserTable")]
    partial class AddLocalUserTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MagicVilla_VillaAPI.Models.LocalUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("localUsers");
                });

            modelBuilder.Entity("MagicVilla_VillaAPI.Models.Villa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Amenity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Occupancy")
                        .HasColumnType("int");

                    b.Property<double>("Rate")
                        .HasColumnType("float");

                    b.Property<int>("Sqft")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Villas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amenity = "Pool, Wi-Fi, Air Conditioning",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2024, 10, 7, 16, 16, 51, 858, DateTimeKind.Local).AddTicks(8361),
                            Details = "A luxury villa with all amenities and a beautiful ocean view.",
                            ImageUrl = "https://www.pexels.com/photo/white-concrete-house-near-body-of-water-210617/",
                            Name = "Luxury Villa",
                            Occupancy = 4,
                            Rate = 500.0,
                            Sqft = 2000,
                            UpdatedDate = new DateTime(2024, 10, 7, 16, 16, 51, 858, DateTimeKind.Local).AddTicks(8428)
                        },
                        new
                        {
                            Id = 2,
                            Amenity = "Fireplace, Wi-Fi, Hot Tub",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2024, 10, 7, 16, 16, 51, 858, DateTimeKind.Local).AddTicks(8434),
                            Details = "A cozy villa located in the mountains, perfect for nature lovers.",
                            ImageUrl = "https://www.pexels.com/photo/a-house-near-mountain-during-daytime-12905885/",
                            Name = "Mountain Villa",
                            Occupancy = 6,
                            Rate = 350.0,
                            Sqft = 1500,
                            UpdatedDate = new DateTime(2024, 10, 7, 16, 16, 51, 858, DateTimeKind.Local).AddTicks(8436)
                        },
                        new
                        {
                            Id = 3,
                            Amenity = "Pool, Wi-Fi, Ocean View",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2024, 10, 7, 16, 16, 51, 858, DateTimeKind.Local).AddTicks(8440),
                            Details = "A beachfront villa with direct access to the beach and stunning views.",
                            ImageUrl = "https://www.pexels.com/photo/aerial-view-of-beach-resort-2265876/",
                            Name = "Beachfront Villa",
                            Occupancy = 5,
                            Rate = 600.0,
                            Sqft = 2500,
                            UpdatedDate = new DateTime(2024, 10, 7, 16, 16, 51, 858, DateTimeKind.Local).AddTicks(8443)
                        },
                        new
                        {
                            Id = 4,
                            Amenity = "Gym, Wi-Fi, Rooftop Pool",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2024, 10, 7, 16, 16, 51, 858, DateTimeKind.Local).AddTicks(8446),
                            Details = "An urban villa located in the heart of the city with luxurious amenities.",
                            ImageUrl = "https://www.pexels.com/photo/modern-urban-house-with-pool-3639902/",
                            Name = "Urban Villa",
                            Occupancy = 3,
                            Rate = 450.0,
                            Sqft = 1800,
                            UpdatedDate = new DateTime(2024, 10, 7, 16, 16, 51, 858, DateTimeKind.Local).AddTicks(8449)
                        },
                        new
                        {
                            Id = 5,
                            Amenity = "Garden, Fireplace, Wi-Fi",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2024, 10, 7, 16, 16, 51, 858, DateTimeKind.Local).AddTicks(8452),
                            Details = "A peaceful villa surrounded by nature, perfect for a quiet retreat.",
                            ImageUrl = "https://www.pexels.com/photo/house-near-a-forest-1817857/",
                            Name = "Countryside Villa",
                            Occupancy = 4,
                            Rate = 300.0,
                            Sqft = 1600,
                            UpdatedDate = new DateTime(2024, 10, 7, 16, 16, 51, 858, DateTimeKind.Local).AddTicks(8455)
                        });
                });

            modelBuilder.Entity("MagicVilla_VillaAPI.Models.VillaNumber", b =>
                {
                    b.Property<int>("VillaNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SpecialDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("VillaId")
                        .HasColumnType("int");

                    b.HasKey("VillaNo");

                    b.HasIndex("VillaId");

                    b.ToTable("VillaNumbers");
                });

            modelBuilder.Entity("MagicVilla_VillaAPI.Models.VillaNumber", b =>
                {
                    b.HasOne("MagicVilla_VillaAPI.Models.Villa", "Villa")
                        .WithMany()
                        .HasForeignKey("VillaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Villa");
                });
#pragma warning restore 612, 618
        }
    }
}
